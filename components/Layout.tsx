import { useState, useCallback, ReactNode, FunctionComponent } from 'react'
import Head from 'next/head'
import { AnimatePresence } from 'framer-motion'

import { InterfaceContext } from '../shared/contexts'

import Header from '../components/Header'
import SettingsPanel from '../components/SettingsPanel'

interface LayoutProperties {
    children?: ReactNode
}

const Layout: FunctionComponent<LayoutProperties> = ({ children }) => {
    let [isSettingsPanelOpen, setIsSettingsPanelOpen] = useState(false)

    let openSettingsPanel = useCallback(() => {
        setIsSettingsPanelOpen(true)
    }, [])

    let closeSettingsPanel = useCallback(() => {
        setIsSettingsPanelOpen(false)
    }, [])

    return (
        <InterfaceContext.Provider
            value={{
                openSettingsPanel,
                closeSettingsPanel
            }}
        >
            {/* <Stack> */}
            <Head>
                <title>Nft Marketplace</title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <link rel='icon' href='/favicon.ico' />
            </Head>
            <Header />
            {children}
            {/* </Stack> */}
            <AnimatePresence>
                {isSettingsPanelOpen && (
                    <SettingsPanel
                        onClose={(): void => setIsSettingsPanelOpen(false)}
                    />
                )}
            </AnimatePresence>
        </InterfaceContext.Provider>
    )
}

export default Layout
